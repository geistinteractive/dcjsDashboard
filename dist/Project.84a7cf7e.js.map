{"version":3,"sources":["index.js"],"names":["print_filter","filter","f","eval","length","top","Infinity","dimension","d","console","log","JSON","stringify","replace","threeChartHeight","moveRight","moveLeft","dayFormat","d3","timeFormat","numFormatLg","format","numFormat","monthName","monthFormat","remove_empty_bins","source_group","all","value","setIntoYears","sourceGroup","window","loadData","json","data","parse","forEach","i","theDate","fieldData","CreationTimestamp","currDate","Date","y","getFullYear","Year","Type","Call_Log_Type","Dept","Call_Log_Department","Day","Month","getMonth","currentYr","previousYr","depts","facts","crossfilter","allCallsDim","allCallsGroup","group","deptDim","deptGroup","reduceCount","deptDimTwo","deptGroupTwo","reduce","typeAdd","current","previous","typeRemove","typeInitial","typeDim","typeGroup","createdByDim","CreatedBy","createdByGroup","monthDim","monthGroupByYear","reducePeriodAdd","reducePeriodRemove","reducePeriodInitial","sel_stack","state","chartAllCalls","dc","rowChart","overviewComposite","compositeChart","overviewCurrent","lineChart","overviewPrevious","chartCallsByType","chartCallsByPerson","chartCallsByDept","pieChart","chartDeptByTypeTwoYears","chartDeptByTypeCurrent","barChart","chartDeptByTypePrevious","ordinalColors","on","chart","selectAll","attr","_rangeBandPadding","legend","x","itemHeight","gap","scaleOrdinal","xUnits","units","ordinal","stack","height","scaleBand","elasticX","elasticY","title","key","layer","brushOn","compose","colors","valueAccessor","interpolate","curveStep","dashStyle","obj","renderLabel","innerRadius","legendText","name","text","utils","printSingleValue","endAngle","startAngle","Math","PI","monthNames","updateFilterDiv","id","label","document","getElementById","innerHTML","sel","filterPrinter","filters","xAxis","tickFormat","m","clipPadding","renderAll"],"mappings":"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","file":"Project.84a7cf7e.js","sourceRoot":"..","sourcesContent":["// import theData from \"./data.json\";\n\nfunction print_filter(filter) {\n  var f = eval(filter);\n  if (typeof f.length != \"undefined\") {\n  } else {\n  }\n  if (typeof f.top != \"undefined\") {\n    f = f.top(Infinity);\n  } else {\n  }\n  if (typeof f.dimension != \"undefined\") {\n    f = f\n      .dimension(function (d) {\n        return \"\";\n      })\n      .top(Infinity);\n  } else {\n  }\n  console.log(\n    filter +\n      \"(\" +\n      f.length +\n      \") = \" +\n      JSON.stringify(f)\n        .replace(\"[\", \"[\\n\\t\")\n        .replace(/}\\,/g, \"},\\n\\t\")\n        .replace(\"]\", \"\\n]\")\n  );\n}\nvar threeChartHeight = 400;\nvar moveRight = 20;\nvar moveLeft = -60;\nvar dayFormat = d3.timeFormat(\"%d\");\nvar numFormatLg = d3.format(\",s\");\nvar numFormat = d3.format(\",\");\nvar monthName = d3.timeFormat(\"%B\");\nvar monthFormat = d3.timeFormat(\"%m\");\nfunction remove_empty_bins(source_group) {\n  return {\n    all: function () {\n      return source_group.all().filter(function (d) {\n        return d.value != 0;\n      });\n    },\n  };\n}\n\nfunction setIntoYears(sourceGroup) {\n  return {\n    all: function () {\n      return sourceGroup.all().filter;\n    },\n  };\n}\n\nwindow.loadData = function (json) {\n  var data = JSON.parse(json);\n\n  // var data = json;\n  data.forEach(function (d, i) {\n    // console.log(d.fieldData.CreationTimestamp)\n    var theDate = d.fieldData.CreationTimestamp;\n    var currDate = new Date(theDate);\n    // console.log(currDate);\n    d.Date = currDate;\n\n    var y = d.Date.getFullYear();\n    d.Year = y;\n    d.Type = d.fieldData.Call_Log_Type;\n    d.Dept = d.fieldData.Call_Log_Department;\n    d.Day = dayFormat(currDate);\n    d.Month = currDate.getMonth();\n  });\n\n  // function getUniqueDepts(value, index, self) {\n  //   var department = value.Dept;\n  //   return self.indexOf(department) === index;\n  // }\n  var currentYr = new Date().getFullYear();\n  var previousYr = currentYr - 1;\n\n  var currentColor = \"orange\";\n  var previousColor = \"green\";\n  console.log(currentYr);\n  var depts = [\n    \"Administrative\",\n    \"Repair\",\n    \"Service\",\n    \"Remodel\",\n    \"Construction\",\n    \"Pool Sales\",\n    \"Retail\",\n  ];\n  var colors = [\n    \"#540045\",\n    \"#C60052\",\n    \"#FF714B\",\n    \"#EAFF87\",\n    \"blue\",\n    \"gray\",\n    \"black\",\n  ];\n  var deptsColor = {\n    Administrative: \"#540045\",\n    Repair: \"#C60052\",\n    Service: \"#FF714B\",\n    Remodel: \"#EAFF87\",\n    Construction: \"blue\",\n    \"Pool Sales\": \"gray\",\n    Retail: \"black\",\n  };\n  // var unique = data.filter(getUniqueDepts);\n  // console.log(unique);\n  var facts = crossfilter(data);\n\n  var allCallsDim = facts.dimension(function (d) {\n    return d.Year;\n  });\n  var allCallsGroup = allCallsDim.group();\n  var deptDim = facts.dimension(function (d) {\n    return d.Dept;\n  });\n  var deptGroup = deptDim.group().reduceCount();\n\n  var deptDimTwo = facts.dimension(function (d) {\n    return d.Type;\n  });\n  var deptGroupTwo = deptDimTwo\n    .group()\n    .reduce(typeAdd, typeRemove, typeInitial);\n\n  function typeAdd(i, d) {\n    if (d.Year === 2020) {\n      i.current[d.Dept] = ++i.current[d.Dept] || 1;\n    } else {\n      i.previous[d.Dept] = ++i.previous[d.Dept] || 1;\n    }\n    return i;\n  }\n\n  function typeRemove(i, d) {\n    if (d.Year === 2020) {\n      i.current[d.Dept] = --i.current[d.Dept] || 0;\n    } else {\n      i.previous[d.Dept] = --i.previous[d.Dept] || 0;\n    }\n    return i;\n  }\n  function typeInitial(i, d) {\n    return { current: {}, previous: {} };\n  }\n\n  var typeDim = facts.dimension(function (d) {\n    return d.fieldData.Call_Log_Type;\n  });\n  var typeGroup = typeDim.group().reduceCount(function (d) {\n    return d.Call_Log_Type;\n  });\n  var typeGroupFiltered = remove_empty_bins(typeGroup);\n  var createdByDim = facts.dimension(function (d) {\n    return d.fieldData.CreatedBy;\n  });\n  var createdByGroup = createdByDim.group();\n\n  var monthDim = facts.dimension(function (d) {\n    return d.Month;\n  });\n\n  var monthGroupByYear = monthDim\n    .group()\n    .reduce(reducePeriodAdd, reducePeriodRemove, reducePeriodInitial);\n\n  // var yearPrev = yearCurrent - 1;\n\n  function reducePeriodAdd(i, d) {\n    // console.log(d.Year);\n    if (d.Year === 2020) {\n      ++i.current;\n    } else {\n      ++i.previous;\n    }\n    return i;\n  }\n  function reducePeriodRemove(i, d) {\n    if (d.Year === 2020) {\n      --i.current;\n    } else {\n      --i.previous;\n    }\n    return i;\n  }\n\n  function reducePeriodInitial(i, d) {\n    return {\n      current: 0,\n      previous: 0,\n    };\n  }\n  print_filter(monthGroupByYear);\n  window.chartAllCalls = dc.rowChart(\"#allCalls\");\n\n  window.overviewComposite = dc.compositeChart(\"#overview\");\n  window.overviewCurrent = dc.lineChart(overviewComposite);\n  window.overviewPrevious = dc.lineChart(overviewComposite);\n  window.chartCallsByType = dc.rowChart(\"#chartCallsByType\");\n  window.chartCallsByPerson = dc.rowChart(\"#chartCallsByPerson\");\n  window.chartCallsByDept = dc.pieChart(\"#chartCallsByDepartment\");\n  window.chartDeptByTypeTwoYears = dc.compositeChart(\n    \"#chartDeptByTypeTwoYears\"\n  );\n  window.chartDeptByTypeCurrent = dc.barChart(chartDeptByTypeTwoYears);\n  window.chartDeptByTypePrevious = dc.barChart(chartDeptByTypeTwoYears);\n\n  function sel_stack(i, state) {\n    return function (d) {\n      return d.value[state][i] || 0;\n    };\n  }\n  print_filter(deptGroupTwo);\n  chartDeptByTypeCurrent\n    // .dimension(deptDimTwo)\n\n    .ordinalColors([\n      \"#540045\",\n      \"#C60052\",\n      \"#FF714B\",\n      \"#EAFF87\",\n      \"red\",\n      \"purple\",\n    ])\n\n    .on(\"pretransition\", function (chart) {\n      chart\n        .selectAll(\"g._4\")\n        .attr(\"transform\", \"translate(\" + moveRight + \", 0)\");\n      chart\n        .selectAll(\"g._5\")\n        .attr(\"transform\", \"translate(\" + moveRight + \", 0)\");\n      chart\n        .selectAll(\"g._2\")\n        .attr(\"transform\", \"translate(\" + moveRight + \", 0)\");\n      chart\n        .selectAll(\"g._1\")\n        .attr(\"transform\", \"translate(\" + moveRight + \", 0)\");\n      chart\n        .selectAll(\"g._3\")\n        .attr(\"transform\", \"translate(\" + moveRight + \", 0)\");\n      chart\n        .selectAll(\"g._0\")\n        .attr(\"transform\", \"translate(\" + moveRight + \", 0)\");\n    })\n\n    .group(\n      deptGroupTwo,\n      depts[0] + \" \" + currentYr,\n      sel_stack(depts[0], \"current\")\n    )\n    ._rangeBandPadding(1)\n    .legend(dc.legend().x(80).y(20).itemHeight(13).gap(5))\n    .x(d3.scaleOrdinal())\n    .xUnits(dc.units.ordinal);\n\n  for (var i = 1; i < 6; ++i) {\n    chartDeptByTypeCurrent.stack(\n      deptGroupTwo,\n      \"\" + depts[i] + \" \" + currentYr,\n      sel_stack(depts[i], \"current\")\n    );\n  }\n  chartDeptByTypePrevious\n    // .dimension(deptDimTwo)\n\n    .ordinalColors([\"#001EBA\", \"#05147D\", \"#35459E\", \"#003B74\", \"#0B42FF\"])\n    ._rangeBandPadding(1)\n    .on(\"pretransition\", function (chart) {\n      chart\n        .selectAll(\"g._4\")\n        .attr(\"transform\", \"translate(\" + moveLeft + \", 0)\");\n      chart\n        .selectAll(\"g._5\")\n        .attr(\"transform\", \"translate(\" + moveLeft + \", 0)\");\n      chart\n        .selectAll(\"g._2\")\n        .attr(\"transform\", \"translate(\" + moveLeft + \", 0)\");\n      chart\n        .selectAll(\"g._1\")\n        .attr(\"transform\", \"translate(\" + moveLeft + \", 0)\")\n        .attr(\"rect\", \"translate(\" + moveLeft + \", 0)\");\n      chart\n        .selectAll(\"g._3\")\n        .attr(\"transform\", \"translate(\" + moveLeft + \", 0)\");\n      chart\n        .selectAll(\"g._0\")\n        .attr(\"transform\", \"translate(\" + moveRight + \", 0)\");\n    })\n\n    .group(\n      deptGroupTwo,\n      depts[0] + depts[i] + \" \" + previousYr,\n      sel_stack(depts[0], \"previous\")\n    )\n\n    .legend(dc.legend().x(80).y(20).itemHeight(13).gap(5))\n    .x(d3.scaleOrdinal())\n    .xUnits(dc.units.ordinal);\n\n  for (var i = 1; i < 6; ++i) {\n    chartDeptByTypePrevious.stack(\n      deptGroupTwo,\n      \"\" + depts[i] + \" \" + previousYr,\n      sel_stack(depts[i], \"previous\")\n    );\n  }\n\n  chartDeptByTypeTwoYears\n    .height(350)\n\n    .x(d3.scaleBand())\n    .xUnits(dc.units.ordinal)\n    .legend(dc.legend().x(80).y(20).itemHeight(13).gap(5))\n    .dimension(deptDimTwo)\n    .group(deptGroupTwo)\n    .elasticX(true)\n    .elasticY(true)\n    .title(function (d) {\n      return d.key + \" [\" + this.layer + \"]\";\n    })\n    .brushOn(false)\n    .compose([chartDeptByTypeCurrent, chartDeptByTypePrevious]);\n\n  overviewCurrent\n    .colors(currentColor)\n    .group(monthGroupByYear, \"\" + currentYr)\n\n    .valueAccessor(function (d) {\n      return d.value.current;\n    });\n\n  overviewPrevious\n    .colors(previousColor)\n    .interpolate(d3.curveStep)\n    .dashStyle([2, 2])\n    .group(monthGroupByYear, \"\" + previousYr)\n    .valueAccessor(function (d) {\n      return d.value.previous;\n    });\n\n  overviewComposite\n    .height(400)\n    .x(d3.scaleOrdinal())\n    .xUnits(dc.units.ordinal)\n    .legend(dc.legend().x(80).y(20).itemHeight(13).gap(5))\n    .dimension(monthDim)\n    .group(monthGroupByYear)\n    .elasticX(true)\n    .elasticY(true)\n    ._rangeBandPadding(1)\n    .brushOn(false)\n    .title(function (d) {\n      var obj =\n        currentYr +\n        \": \" +\n        d.value.current +\n        \"\\n\" +\n        previousYr +\n        \": \" +\n        d.value.previous;\n      return obj;\n    })\n    .compose([overviewCurrent, overviewPrevious]);\n\n  chartCallsByType\n    .dimension(typeDim)\n    .renderLabel(true)\n    .elasticX(true)\n    .group(typeGroup)\n    .height(threeChartHeight)\n    .x(d3.scaleOrdinal());\n\n  chartAllCalls\n    .dimension(allCallsDim)\n    .ordinalColors([previousColor, currentColor])\n\n    .renderLabel(true)\n    .elasticX(true)\n    .group(allCallsGroup)\n    .height(100)\n    .x(d3.scaleOrdinal());\n  chartCallsByPerson\n    .dimension(createdByDim)\n    .renderLabel(true)\n    .elasticX(true)\n    .group(createdByGroup)\n    .height(threeChartHeight)\n    .x(d3.scaleOrdinal());\n  chartCallsByDept\n    .dimension(deptDim)\n    .group(deptGroup)\n    .innerRadius(50)\n    .height(400)\n\n    .ordinalColors([\"#540045\", \"#C60052\", \"#FF714B\", \"#EAFF87\"])\n    .legend(\n      dc.legend().legendText(function (d) {\n        // console.log(d);\n        return d.name + \" || \" + d.data;\n      })\n    )\n    .on(\"pretransition\", function (chart) {\n      chart.selectAll(\"text.pie-slice\").text(function (d) {\n        var a = d.data.key;\n        var v = d.data.value;\n        // var label = a ? \"Canceled\" : \"Not Canceled\";\n        return (\n          dc.utils.printSingleValue(\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) * 100\n          ) + \"%\"\n        );\n      });\n    });\n  // overviewComposite.xAxis().tickFormat(d3.time.format(\"%B\"));\n  var monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  function updateFilterDiv(filter, id, label) {\n    var fil = document.getElementById(id);\n    fil.innerHTML = filter;\n  }\n  chartCallsByType.on(\"filtered\", function (chart, filter) {\n    var sel = chart.filterPrinter()(chart.filters());\n    console.log(\"Selected Filters are: \" + sel);\n    updateFilterDiv(sel, \"filtersType\", \"Type\");\n  });\n\n  chartCallsByDept.on(\"filtered\", function (chart, filter) {\n    var sel = chart.filterPrinter()(chart.filters());\n    console.log(\"Selected Filters are: \" + sel);\n    updateFilterDiv(sel, \"filtersDept\", \"Dept\");\n  });\n\n  chartCallsByPerson.on(\"filtered\", function (chart, filter) {\n    var sel = chart.filterPrinter()(chart.filters());\n    console.log(\"Selected Filters are: \" + sel);\n    updateFilterDiv(sel, \"filtersPerson\", \"Person\");\n  });\n\n  // chartAllCalls.on(\"filtered\", function (chart, filter) {\n  //   var sel = chart.filterPrinter()(chart.filters());\n  //   console.log(\"Selected Filters are: \" + sel);\n  //   updateFilterDiv(sel);\n  // });\n\n  overviewComposite.xAxis().tickFormat(function (m) {\n    console.log(m);\n    return monthNames[m];\n  });\n  overviewComposite.clipPadding(100);\n  dc.renderAll();\n\n  // document.getElementById(\"showPrev\").onclick = addPrevious;\n};\n\n// window.loadData(theData);\n"]}